//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Avanade.Amp.Core.Site;

namespace Avanade.Amp.Core.Telemetry
{
    public partial class RdpTelemetryWeb
    {
        
        private string mId;
        
        private string mUserId;
        
        private string mAccountId;
        
        private string mSiteId;
        
        private string mHopSiteId;
        
        private string mTargetId;
        
        private string mHostServerName;
        
        private System.Nullable<RdpConnectors> mConnectionMethod;
        
        private string mRdpLogId;
        
        private System.DateTime mConnectTime;
        
        private System.Nullable<System.DateTime> mDisconnectTime;
        
        private System.Nullable<float> mCoreClockOffset;
        
        private System.Nullable<float> mSiteClockOffset;
        
        private System.Nullable<float> mUserLatitude;
        
        private System.Nullable<float> mUserLongitude;
        
        private string mWebsiteRegion;
        
        private string mConnectionRegion;
        
        public string Id
        {
            get
            {
                return this.mId;
            }
            set
            {
                this.mId = value;
            }
        }
        
        public string UserId
        {
            get
            {
                return this.mUserId;
            }
            set
            {
                this.mUserId = value;
            }
        }
        
        public string AccountId
        {
            get
            {
                return this.mAccountId;
            }
            set
            {
                this.mAccountId = value;
            }
        }
        
        public string SiteId
        {
            get
            {
                return this.mSiteId;
            }
            set
            {
                this.mSiteId = value;
            }
        }
        
        public string HopSiteId
        {
            get
            {
                return this.mHopSiteId;
            }
            set
            {
                this.mHopSiteId = value;
            }
        }
        
        public string TargetId
        {
            get
            {
                return this.mTargetId;
            }
            set
            {
                this.mTargetId = value;
            }
        }
        
        public string HostServerName
        {
            get
            {
                return this.mHostServerName;
            }
            set
            {
                this.mHostServerName = value;
            }
        }
        
        public System.Nullable<RdpConnectors> ConnectionMethod
        {
            get
            {
                return this.mConnectionMethod;
            }
            set
            {
                this.mConnectionMethod = value;
            }
        }
        
        public string RdpLogId
        {
            get
            {
                return this.mRdpLogId;
            }
            set
            {
                this.mRdpLogId = value;
            }
        }
        
        public System.DateTime ConnectTime
        {
            get
            {
                return this.mConnectTime;
            }
            set
            {
                this.mConnectTime = value;
            }
        }
        
        public System.Nullable<System.DateTime> DisconnectTime
        {
            get
            {
                return this.mDisconnectTime;
            }
            set
            {
                this.mDisconnectTime = value;
            }
        }
        
        public System.Nullable<float> CoreClockOffset
        {
            get
            {
                return this.mCoreClockOffset;
            }
            set
            {
                this.mCoreClockOffset = value;
            }
        }
        
        public System.Nullable<float> SiteClockOffset
        {
            get
            {
                return this.mSiteClockOffset;
            }
            set
            {
                this.mSiteClockOffset = value;
            }
        }
        
        public System.Nullable<float> UserLatitude
        {
            get
            {
                return this.mUserLatitude;
            }
            set
            {
                this.mUserLatitude = value;
            }
        }
        
        public System.Nullable<float> UserLongitude
        {
            get
            {
                return this.mUserLongitude;
            }
            set
            {
                this.mUserLongitude = value;
            }
        }
        
        public string WebsiteRegion
        {
            get
            {
                return this.mWebsiteRegion;
            }
            set
            {
                this.mWebsiteRegion = value;
            }
        }
        
        public string ConnectionRegion
        {
            get
            {
                return this.mConnectionRegion;
            }
            set
            {
                this.mConnectionRegion = value;
            }
        }
        
        public static RdpTelemetry ToRdpTelemetry(RdpTelemetryWeb rdp)
        {
            RdpTelemetry result = new RdpTelemetry();
            result.Id = rdp.Id;
            result.UserId = rdp.UserId;
            result.AccountId = rdp.AccountId;
            result.SiteId = rdp.SiteId;
            result.HopSiteId = rdp.HopSiteId;
            result.TargetId = rdp.TargetId;
            result.HostServerName = rdp.HostServerName;
            result.ConnectionMethod = rdp.ConnectionMethod;
            result.RdpLogId = rdp.RdpLogId;
            result.ConnectTime = rdp.ConnectTime;
            result.DisconnectTime = rdp.DisconnectTime;
            result.CoreClockOffset = rdp.CoreClockOffset;
            result.SiteClockOffset = rdp.SiteClockOffset;
            result.UserLatitude = rdp.UserLatitude;
            result.UserLongitude = rdp.UserLongitude;
            result.WebsiteRegion = rdp.WebsiteRegion;
            result.ConnectionRegion = rdp.ConnectionRegion;
            return result;
        }
        
        public static RdpTelemetryWeb ToRdpTelemetryWeb(RdpTelemetry rdp)
        {
            RdpTelemetryWeb result = new RdpTelemetryWeb();
            result.Id = rdp.Id;
            result.UserId = rdp.UserId;
            result.AccountId = rdp.AccountId;
            result.SiteId = rdp.SiteId;
            result.HopSiteId = rdp.HopSiteId;
            result.TargetId = rdp.TargetId;
            result.HostServerName = rdp.HostServerName;
            result.ConnectionMethod = rdp.ConnectionMethod;
            result.RdpLogId = rdp.RdpLogId;
            result.ConnectTime = rdp.ConnectTime;
            result.DisconnectTime = rdp.DisconnectTime;
            result.CoreClockOffset = rdp.CoreClockOffset;
            result.SiteClockOffset = rdp.SiteClockOffset;
            result.UserLatitude = rdp.UserLatitude;
            result.UserLongitude = rdp.UserLongitude;
            result.WebsiteRegion = rdp.WebsiteRegion;
            result.ConnectionRegion = rdp.ConnectionRegion;
            return result;
        }
    }

}
